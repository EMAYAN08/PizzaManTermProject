# AWSTemplateFormatVersion: 2010-09-09
# Parameters:
#   CodeCommitRepo:
#     Description: PizzaManRepository
#     Type: String
#     Default: PizzaMan
#   CodeCommitBranch:
#     Description: masterBranch
#     Type: String
#     Default: master  

# Resources:
#   CodePipeline:
#     Type: 'AWS::CodePipeline::Pipeline'
#     Properties:
#       RoleArn: !GetAtt CodePipeLineRole.Arn
#       ArtifactStore:
#         Location: !Ref PipelineBucket
#         Type: S3
#       Stages:
#         - 
#           Name: Source
#           Actions: 
#             - 
#               Name: SourceAction
#               ActionTypeId: 
#                 Category: Source
#                 Owner: AWS
#                 Provider: CodeCommit	
#                 Version: 1
#               OutputArtifacts: 
#                 - 
#                   Name: MyApp
#               Configuration:                
#                 BranchName: !Ref CodeCommitBranch
#                 PollForSourceChanges: 'false'
#                 RepositoryName: !Ref CodeCommitRepo
#         - 
#           Name: Build
#           Actions: 
#             - 
#               Name: BuildAction
#               ActionTypeId: 
#                 Category: Build
#                 Owner: AWS
#                 Version: 1
#                 Provider: CodeBuild
#               InputArtifacts: 
#                 - 
#                   Name: MyApp
#               OutputArtifacts: 
#                 - 
#                   Name: MyAppBuild
#               Configuration:
#                 ProjectName: !Ref CodeBuild
#         - 
#           Name: Deploy
#           Actions: 
#             - 
#               Name: DeployAction
#               ActionTypeId: 
#                 Category: Deploy
#                 Owner: AWS
#                 Version: 1
#                 Provider: S3
#               InputArtifacts: 
#                 - 
#                   Name: MyAppBuild  
#               Configuration:                
#                 BucketName: !Ref DeployBucket
#                 Extract: 'true'                
#       Tags:
#         - Key: Name
#           Value: PizzaPipeline
#   CodeBuildRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#           - 
#             Effect: Allow
#             Principal:
#               Service:
#                 - "codebuild.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#       Path: /service-role/
#       Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: "2012-10-17"
#             Statement: 
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:CreateBucket"
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"
#                 Resource: 
#                   - !GetAtt PipelineBucket.Arn
#                   - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:CreateBucket"
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"
#                 Resource: 
#                   - !GetAtt DeployBucket.Arn
#                   - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]
#               -
#                 Effect: Allow
#                 Action:
#                   - "logs:CreateLogGroup"
#                   - "logs:CreateLogStream"
#                   - "logs:PutLogEvents"
#                   - "cloudfront:CreateInvalidation"
#                 Resource:
#                   - "*"
#       Tags:
#         - Key: Name
#           Value: PizzaCodeBuildRole
#   CodePipeLineRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#           - 
#             Effect: Allow
#             Principal:
#               Service:
#                 - "codepipeline.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#       Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: "2012-10-17"
#             Statement: 
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:CreateBucket"
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:GetObjectAcl"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"                  
#                 Resource: 
#                   - !GetAtt PipelineBucket.Arn
#                   - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
#               - 
#                 Effect: Allow  
#                 Action:
#                   - "codebuild:BatchGetBuilds"
#                   - "codebuild:StartBuild"
#                 Resource: "*"
#               - 
#                 Effect: Allow  
#                 Action:
#                   - "codecommit:GetRepository"
#                   - "codecommit:GetBranch"
#                   - "codecommit:GetCommit"
#                   - "codecommit:UploadArchive"
#                   - "codecommit:GetUploadArchiveStatus"
#                   - "codecommit:CancelUploadArchive"
#                 Resource: "*"                
#       Tags:
#         - Key: Name
#           Value: PizzaCodePipeLineRole
#   CodeBuild:
#     Type: 'AWS::CodeBuild::Project'
#     Properties:
#       Name: !Sub ${AWS::StackName}-CodeBuild
#       ServiceRole: !GetAtt CodeBuildRole.Arn
#       Artifacts:
#         Type: CODEPIPELINE
#         Name: MyProject
#       # Source: 
#       #   Type: CODEPIPELINE
#       Environment:
#         ComputeType: BUILD_GENERAL1_SMALL
#         Type: LINUX_CONTAINER
#         Image: "aws/codebuild/nodejs:8.11.0"
#       Source:
#         Type: CODEPIPELINE
#         BuildSpec: !Sub |
#           version: 0.2
#           phases:
#             pre_build:
#               commands:
#                 - echo Installing source NPM dependencies...
#                 - npm install
#             build:
#               commands:
#                 - echo Build started on `date`
#                 - npm run build           
#           artifacts:
#             files:
#               - '**/*'
#             base-directory: build
#       Tags:
#         - Key: Name
#           Value: PizzaCodeBuildProject
#   PipelineBucket: 
#     Type: 'AWS::S3::Bucket'
#     Properties:
#       BucketName: pizzacodepipelinebucketreact
#   DeployBucket:
#     Type: 'AWS::S3::Bucket'
#     Properties:
#       BucketName: pizzacodepipelinedeploybucketreact
#       WebsiteConfiguration:
#         IndexDocument: index.html
#       AccessControl: PublicReadWrite
#       CorsConfiguration:
#         CorsRules:
#         - AllowedOrigins: ['*']
#           AllowedMethods: [GET]
  
#   DeploymentBucketPolicy: 
#     Type: AWS::S3::BucketPolicy
#     Properties: 
#       Bucket: !Ref DeployBucket
#       PolicyDocument: 
#         Statement: 
#           - 
#             Action: 
#               - "s3:GetObject"
#             Effect: "Allow"
#             Resource: 
#               Fn::Join: 
#                 - ""
#                 - 
#                   - "arn:aws:s3:::"
#                   - 
#                     Ref: DeployBucket
#                   - "/*"
#             Principal: "*"
         


AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project
    Default: pizzaman

Resources:
  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref ProjectName

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-artifacts-bucket

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${S3Bucket}/*
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                  - codecommit:ListRepositories
                Resource: !GetAtt CodeCommitRepository.Arn

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: !Sub ${ProjectName}-build-artifact
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      BuildSpec: buildspec.yml

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-codepipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: !Sub arn:aws:s3:::${S3Bucket}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - codepipeline:*
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectName}

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref ProjectName
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName: !Ref ProjectName
                BranchName: master
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ApplicationName: !Ref ProjectName
                DeploymentGroupName: !Ref ProjectName
              RunOrder: 1

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-codedeploy-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource: !Sub arn:aws:s3:::${S3Bucket}/*
              - Effect: Allow
                Action:
                  - codedeploy:*
                Resource: '*'
